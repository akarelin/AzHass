group:
  people:
    name: People
    icon: mdi:account-heart
    entities:
      - device_tracker.alex
      - device_tracker.irina
      - device_tracker.galina

automation dt2pt:
  alias: "Device Tracker -> Person Tracker"  
  hide_entity: true
  trigger:
    platform: state
    entity_id: 
      - device_tracker.galina_iphone
      - device_tracker.irina_iphone
      - device_tracker.alex_iphone_ot
      - device_tracker.alex_ios
  action:
    - service: mqtt.publish
      data_template:
        topic: "person/{{ trigger.entity_id.split('.')[1].split('_')[0] }}/location"
        payload: >-
          {
            "latitude": {{ trigger.to_state.attributes.latitude }},
            "longitude": {{ trigger.to_state.attributes.longitude }},
            "gps_accuracy": {{ trigger.to_state.attributes.gps_accuracy | int }}
          }
        retain: true

# automation people departure alex:
#   alias: "People Departure (Alex)"
#   hide_entity: true
#   trigger:
#     platform: zone
#     entity_id: device_tracker.alex
#     zone: zone.santa_monica
#     event: leave
#   condition:
#     condition: and
#     conditions:
#       - condition: state
#         entity_id: device_tracker.irina
#         state: 'not home'
#   action:
#     - service: input_select.select_option
#       data:
#         entity_id: input_select.sway
#         option: Away
# automation people departure irina:
#   alias: "People Departure (Irina)"
#   hide_entity: true
#   trigger:
#     platform: state
#     entity_id: device_tracker.irina
#     to: not_home
#   condition:
#     condition: template
#     value_template: "{{ distance('zone.santa_monica', 'device_tracker.alex') > states.zone.santa_monica.attributes.radius }}"
#   action:
#     - service: input_select.select_option
#       data:
#         entity_id: input_select.sway
#         option: Away


# automation alex leaves valley:
#   trigger:
#     platform: zone
#     entity_id: device_tracker.alex
#     zone: zone.valley
#     event: leave
#   condition:
#     condition: and
#     conditions:
#       - condition: template
#         value_template: "{{ input_select.creekview != 'Away' }}"
#       - condition: template
#         value_template: "{{ device_tracker.irina.state != 'Creekview' }}"
#   action:
#     service: input_select.select_option
#     data:
#       entity_id: input_select.creekview
#       value: Away

# automation is2dt:
#   alias: "IS -> DT"  
#   hide_entity: true
#   trigger:
#     platform: state
#     entity_id: 
#       - input_select.irina_location
#   action:
#     - service: mqtt.publish
#       data_template:
#         topic: "person/{{ trigger.entity_id.split('.')[1].split('_')[0] }}/location"
#         payload: >-
#           {% set location = trigger.to_state.entity_id.split('.')[1] %}
#           {% if states.zone.{{ location }} %}
#           {% else %}
#             {% set location = home %}
#           {% endif %}
#             {
#               "latitude": {{ states.zone.{{ location }}.attributes.latitude }},
#               "longitude": {{ states.zone.{{ location }}.attributes.longitude }},
#               "gps_accuracy": {{ states.zone.{{ location }}.attributes.radius }}
#             }
#         retain: true

  # - platform: mqtt_json
  #   devices:
  #     alex_gps: 'person/alex/gps'
  #     irina_gps: 'person/irina/gps'

# automation dt2ds:
#   alias: "DT -> MQTT"  
#   hide_entity: true
#   trigger:
#     platform: state
#     entity_id: device_tracker.alex_iphone_xsm
#   action:
#     - service: mqtt.publish
#       data_template:
#         topic: "person/{{ trigger.entity_id.split('.')[1].split('_')[0] }}/location"
#         payload: >-
#           {
#             "latitude": {{ trigger.to_state.attributes.latitude }},
#             "longitude": {{ trigger.to_state.attributes.longitude }},
#             "gps_accuracy": {{ trigger.to_state.attributes.gps_accuracy | int }},
#             "location": "{{ trigger.to_state.state }}"
#           }
#         retain: true
#     # - service: mqtt.publish
    #   data_template:
    #     topic: "person/{{ trigger.entity_id.split('.')[1].split('_')[0] }}/location"
    #     payload: "{{ trigger.to_state.state }}"
    #     retain: true

# automation dt2is:
#   alias: "DT -> IS"  
#   hide_entity: true
#   trigger:
#     platform: state
#     entity_id: 
#       - device_tracker.alex
#       - device_tracker.irina
#   action:
#     service: input_select.select_option
#     data_template:
#       entity_id: "input_select.{{ trigger.entity_id.split('.')[1] }}_location"
#       option: "{{ state_attr('trigger.to_state','location') }}"

# automation isdt:
  # alias: "IS -> MQTT"  
  # hide_entity: true
  # trigger:
  #   platform: state
  #   entity_id: 
  #     - input_select.alex_location
  #     - input_select.irina_location
  # action:  
  #   service: mqtt.publish
  #   data_template:
  #     topic: "person/{{ trigger.entity_id.split('.')[1].split('_')[0] }}/location"
  #     payload: "{{ trigger.to_state.state }}"
  #     retain: true
